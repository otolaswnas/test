[servers.group_mappings]
{% for mapping in group_mappings %}
{{ mapping.group_dn }} = { org_role = "{{ mapping.org_role }}", org_id = {{ mapping.org_id }} }
{% endfor %}

------
W swoim playbooku Ansible dodaj zadanie, które użyje modułu blockinfile, aby dodać nową sekcję servers.group_mappings do pliku ldap.toml. Na przykład:
- name: Add new group mapping to Grafana ldap.toml config file
  blockinfile:
    path: /etc/grafana/ldap.toml
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
    block: |
      [[servers.group_mappings]]
      group_dn = "{{ ldap_group_dn }}"
      org_role = "{{ ldap_org_role }}"
      org_id = {{ ldap_org_id }}
  vars:
    ldap_group_dn: "{{ new_ldap_group_dn }}"
    ldap_org_role: "{{ new_ldap_org_role }}"
    ldap_org_id: "{{ new_ldap_org_id }}"
Kopiuj
W tym przykładzie używamy zmiennych new_ldap_group_dn, new_ldap_org_role i new_ldap_org_id, aby przekazać wartości dla nowej sekcji servers.group_mappings. Możesz zdefiniować te zmienne w playbooku lub przekazać je jako argumenty podczas uruchamiania playbooka.

------------------------------------------------------------
Utwórz katalog templates w swoim projekcie Ansible.
W katalogu templates utwórz plik szablonu o nazwie ldap.toml.j2.
W pliku szablonu ldap.toml.j2 dodaj treść pliku konfiguracyjnego ldap.toml, używając zmiennych Jinja2 tam, gdzie chcesz wstawić dynamiczne wartości. Na przykład:
# Plik szablonu ldap.toml.j2
[[servers]]
host = "{{ ldap_host }}"
port = {{ ldap_port }}
use_ssl = {{ ldap_use_ssl }}
bind_dn = "{{ ldap_bind_dn }}"
bind_password = "{{ ldap_bind_password }}"
search_filter = "{{ ldap_search_filter }}"
search_base_dns = ["{{ ldap_search_base_dns }}"]

[[servers.group_mappings]]
group_dn = "{{ ldap_group_dn }}"
org_role = "{{ ldap_org_role }}"
org_id = {{ ldap_org_id }}
Kopiuj
W swoim playbooku Ansible dodaj zadanie, które użyje modułu template, aby wygenerować plik konfiguracyjny ldap.toml na podstawie szablonu ldap.toml.j2. Na przykład:
- name: Generate Grafana ldap.toml config file
  template:
    src: templates/ldap.toml.j2
    dest: /etc/grafana/ldap.toml
  vars:
    ldap_host: "ldap.example.com"
    ldap_port: 636
    ldap_use_ssl: true
    ldap_bind_dn: "cn=admin,dc=example,dc=com"
    ldap_bind_password: "secret"
    ldap_search_filter: "(cn=%s)"
    ldap_search_base_dns: "ou=users,dc=example,dc=com"
    ldap_group_dn: "cn=admins,ou=groups,dc=example,dc=com"
    ldap_org_role: "Admin"
    ldap_org_id: 1

------------------------------------------------------------------------
- hosts: all
  vars:
    file_path: /path/to/file
    backup_path: /path/to/backup/file.bak
    local_file_path: /path/to/local/file
    service_name: myservice
  tasks:
    - name: Zrób kopię zapasową pliku
      copy:
        src: "{{ file_path }}"
        dest: "{{ backup_path }}"
        remote_src: yes

    - name: Nadpisz plik nową zawartością
      copy:
        src: "{{ local_file_path }}"
        dest: "{{ file_path }}"

    - name: Zrestartuj usługę
      service:
        name: "{{ service_name }}"
        state: restarted


---------------------------------------------------------------------------
- hosts: all
  tasks:
    - name: Zrób kopię zapasową pliku
      copy:
        src: /path/to/file
        dest: /path/to/backup/file.bak
        remote_src: yes

    - name: Nadpisz plik nową zawartością
      copy:
        src: /path/to/local/file
        dest: /path/to/file

    - name: Zrestartuj usługę
      service:
        name: myservice
        state: restarted



[mygroup]
host1 ansible_host=192.168.1.100 ansible_user=myuser ansible_ssh_private_key_file=/path/to/keyfile
host2 ansible_host=192.168.1.101 ansible_user=myuser ansible_ssh_private_key_file=/path/to/keyfile



ansible-playbook -i /path/to/inventory myplaybook.yml
